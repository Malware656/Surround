package com.malware.surround;

import android.content.Context;
import android.text.Layout;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import java.util.ArrayList;
import java.util.ConcurrentModificationException;

public class SongListAdapter extends RecyclerView.Adapter<SongListAdapter.ViewHolder>{
    public ArrayList<String> songList;
    public Context context;
    String TAG = SongListAdapter.class.getSimpleName();

    // Setting songs list to RecyclerView
    public SongListAdapter(ArrayList<String> songList){
        this.songList = songList;
    }
    // As RecyclerView is Empty, inflating an Layout for it to show some exoSkeleton
    @NonNull
    @Override
    public SongListAdapter.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        // We need an inflater to inflate the layout so create an Instance for LayoutInflater
        LayoutInflater inflater = LayoutInflater.from(parent.getContext());
        context = parent.getContext();
        // attachToRoot should always be false while using RecyclerView
        View listTile = inflater.inflate(R.layout.list_tile, parent, false);
        // Return type of dis function is ViewHolder so creating ViewHolder
        ViewHolder holder = new ViewHolder(listTile);
        return holder;
    }

    @Override
    public void onBindViewHolder(@NonNull SongListAdapter.ViewHolder holder, int position) {
        // Accessing the variables declared in ViewHolder class
        holder.songName.setText(songList.get(position));
    }

    @Override
    public int getItemCount() {
        return songList.size();
    }

    public class ViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {
        TextView songName;
        public ViewHolder(@NonNull View itemView) {
            super(itemView);
            songName = itemView.findViewById(R.id.song_name);
            itemView.setOnClickListener(this);
        }
        @Override
        public void onClick(View view) {
            if(view instanceof RelativeLayout){
                Toast.makeText(context, "songName", Toast.LENGTH_SHORT).show();
            }
        }
    }
}