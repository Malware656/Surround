package com.malware.surround;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;
import androidx.core.content.ContextCompat;
import android.Manifest;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.net.Uri;
import android.os.Bundle;
import android.provider.Settings;
import android.util.Log;
import android.view.View;
import android.widget.Button;

import com.malware.surround.Helpers.HelperFunctions;
import com.google.android.material.dialog.MaterialAlertDialogBuilder;
import com.malware.surround.screens.SongListActivity;

public class MainActivity extends AppCompatActivity implements ActivityCompat.OnRequestPermissionsResultCallback, View.OnClickListener {
    public static String[] permissions = new String[]{Manifest.permission.READ_EXTERNAL_STORAGE};
    private View mLayout;
    Button nextButton;
    Button grantPermissionButton;
    public static String TAG = MainActivity.class.getSimpleName();
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        if(ContextCompat.checkSelfPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED){
            moveToMainScreen();
        }
        else {
            setContentView(R.layout.permission_page);
            grantPermissionButton = findViewById(R.id.grant_permissions);
            grantPermissionButton.setOnClickListener(this);
            nextButton = findViewById(R.id.permissions_next);
            nextButton.setOnClickListener(this);
            mLayout = findViewById(R.id.permissions_page);
        }
    }
    private void moveToMainScreen(){
        Intent intent = new Intent(this, SongListActivity.class);
        startActivity(intent);
        finish();
    }
    private void getPermissions(){
        if(ContextCompat.checkSelfPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE) ==  PackageManager.PERMISSION_GRANTED){
            grantPermissionButton.setEnabled(false);
            nextButton.setVisibility(View.VISIBLE);
            HelperFunctions.showSnack(this, "Permissions Granted you can now enjoy your songs", mLayout);
        }
        else{
            if(shouldShowRequestPermissionRationale(Manifest.permission.READ_EXTERNAL_STORAGE)){
                showPermissionRequestDialogue();
            }
            else{
                Log.e(TAG, "REQUESTING PERMS");
                ActivityCompat.requestPermissions(
                        MainActivity.this, new String[]{Manifest.permission.READ_EXTERNAL_STORAGE}, 0
                );
            }
        }
    }

    void showPermissionRequestDialogue(){
        Intent intent = new Intent(Settings.ACTION_APPLICATION_DETAILS_SETTINGS);
        Uri uri = Uri.fromParts("package", getPackageName(), null);
        intent.setData(uri);
        new MaterialAlertDialogBuilder(this)
                .setTitle("PERMISSIONS NEEDED")
                .setMessage("Please provide proper permissions before accessing media files")
                .setPositiveButton("Go to settings", (dialogInterface, i) -> {
                    startActivity(intent);
                    nextButton.setVisibility(View.VISIBLE);
                })
                .setNegativeButton(
                        "Exit", (dialogInterface, i) -> System.exit(0)
                ).show();
    }

    @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
        if (grantResults[0] == PackageManager.PERMISSION_GRANTED) {
            grantPermissionButton.setEnabled(false);
            nextButton.setVisibility(View.VISIBLE);
            moveToMainScreen();
        }
        else{
            showPermissionRequestDialogue();
        }
    }

    @Override
    public void onClick(View view) {
        if(view.getId() == R.id.grant_permissions){
            getPermissions();
        }
        else if(view.getId() == R.id.permissions_next){
            moveToMainScreen();
        }
    }
}