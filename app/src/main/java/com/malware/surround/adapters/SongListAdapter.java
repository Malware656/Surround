package com.malware.surround.adapters;

import android.content.ContentUris;
import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.drawable.Drawable;
import android.net.Uri;
import android.os.ParcelFileDescriptor;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.malware.surround.R;
import com.malware.surround.models.SongInfo;

import java.io.FileNotFoundException;
import java.util.ArrayList;

public class SongListAdapter extends RecyclerView.Adapter<SongListAdapter.ViewHolder>{
    public ArrayList<SongInfo> songList;
    public Context context;
    String TAG = SongListAdapter.class.getSimpleName();

    // Setting songs list to RecyclerView
    public SongListAdapter(ArrayList<SongInfo> songList){
        this.songList = songList;
    }
    // As RecyclerView is Empty, inflating an Layout for it to show some exoSkeleton
    @NonNull
    @Override
    public SongListAdapter.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        // We need an inflater to inflate the layout so create an Instance for LayoutInflater
        LayoutInflater inflater = LayoutInflater.from(parent.getContext());
        context = parent.getContext();
        // attachToRoot should always be false while using RecyclerView
        View listTile = inflater.inflate(R.layout.list_tile, parent, false);
        // Return type of dis function is ViewHolder so creating ViewHolder
        ViewHolder holder = new ViewHolder(listTile);
        return holder;
    }

    @Override
    public void onBindViewHolder(@NonNull SongListAdapter.ViewHolder holder, int position) {
        Uri uri = songList.get(position).getAlbumArt();
        // Accessing the variables declared in ViewHolder class
        holder.songName.setText(songList.get(position).getName());
        holder.artistName.setText(songList.get(position).getArtist());
        holder.albumArt.setColorFilter(songList.get(position).getColor());
/*        try {
//            ParcelFileDescriptor pfd = context.getContentResolver().openFileDescriptor(uri, "r");
//            if(pfd != null){
//                holder.albumArt.setImageURI(uri);
//            }
//        } catch (FileNotFoundException e) {
//        }
*/
        holder.itemView.setOnClickListener( l -> {
                Toast.makeText(context, songList.get(position).getName(), Toast.LENGTH_SHORT).show();
        });
    }

    @Override
    public int getItemCount() {
        return songList.size();
    }

    public static class ViewHolder extends RecyclerView.ViewHolder {
        TextView songName;
        TextView artistName;
        ImageView albumArt;
        public ViewHolder(@NonNull View itemView) {
            super(itemView);
            songName = itemView.findViewById(R.id.song_name);
            artistName = itemView.findViewById(R.id.artist_name);
            albumArt = itemView.findViewById(R.id.album_art);
        }
    }
}